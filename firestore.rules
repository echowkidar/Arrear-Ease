rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'amulivealigarh@gmail.com';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow read/write access for the admin to any user document.
      // Allow a regular authenticated user to create, read, and update their own document.
      allow read, update, delete: if isAdmin() || request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Rules for the 'configurations' collection
    match /configurations/{docId} {
      // Allow any authenticated user to read the configuration.
      allow read: if request.auth != null;
      // Only allow the admin to write (create, update, delete) the configuration.
      allow write: if isAdmin();
    }
    
    // Rules for the 'savedStatements' collection
    match /savedStatements/{statementId} {
        // An authenticated user can manage their own statements.
        // The admin can access any statement.
        allow read, write, delete: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
        allow create: if request.auth != null;
    }
  }
}
